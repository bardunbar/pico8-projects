pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
-- tremble
-- dunbar games 2023

function init_lights(levels)
  -- cache sqrt
  _sqrt = {}
  for i = 0, 4096 do
    _sqrt[i] = sqrt(i)
  end

  -- read in color luts from sprite data, save to ram
  for lvl = 1, levels do
    local adr=0x4300 + lvl * 0x100
    local sprite_x = lvl - 1
    -- Since colors are stored as two colors per byte, create a lut of each possible color pair
    for c1 = 0,15 do
      local nc = sget(sprite_x, c1)
      local topl = nc << 4
      for c2 = 0,15 do
        poke(adr, topl + sget(sprite_x, c2))
        adr += 1
      end
    end
  end
end

function gen_blend(level)
  -- Calculate the lookup address for the current light level
  local lut_address = 0x4300 + (level << 8)
  return function(sx, ex, y)
    local l_address = lut_address
    local y_address = 0x6000 + (y << 6)
    local start_address = y_address + (((sx + 1) >> 1) & 0xffff)
    local end_address = y_address + (((ex - 1) >> 1) & 0xffff)

    -- Process if first pixel is odd
    if (sx & 1.99995) >= 1 then
      local s_addr = start_address - 1
      local value = @s_addr
      poke(s_addr, (value & 0xf) + (@(l_address | value) & 0xf0))
    end

    -- Process pixels
    for address = start_address, end_address do
      -- Peek at the screen pixel
      -- Use bitwise or to add l_address (always of the form 0x??00) with address (always of the form 0x00??)
      -- This gets the final address without using addition
      poke(address, @(l_address | @address))
    end

    -- Process if last pixel is even
    if (ex & 1.99995) < 1 then
      local e_addr = end_address + 1
      local value = @e_addr
      poke(e_addr, (@(l_address | value) & 0xf) + (value & 0xf0))
    end
  end
end

-- function gen_blend(l)
--   local lutaddr=0x4300+shl(l,8)
--   return function(x1,x2,y)
--     local laddr=lutaddr
--     local yaddr=0x6000+shl(y,6)
--     local saddr,eaddr=
--      yaddr+band(shr(x1+1,1),0xffff),
--      yaddr+band(shr(x2-1,1),0xffff)
--     -- odd pixel on left?
--     if band(x1,1.99995)>=1 then
--      local a=saddr-1
--      local v=peek(a)
--      poke(a,
--       band(v,0xf) +
--       band(peek(bor(laddr,v)),0xf0)
--      )
--     end
--      -- full bytes
--     for addr=saddr,eaddr do
--      poke(addr,
--       peek(
--        bor(laddr,peek(addr))
--       )
--      )
--     end
--     -- odd pixel on right?
--     if band(x2,1.99995)<1 then
--      local a=eaddr+1
--      local v=peek(a)
--      poke(a,
--       band(peek(bor(laddr,v)),0xf) +
--       band(v,0xf0)
--      )
--     end
--   end
-- end

brkpts={}

function gen_fill_light(light_x, light_y, brightness)
  local l_brightness, fills = brightness * brightness, light_fills
  return function(sx, ex, y)
    -- Transform the coordinates into the light's frame
    local lsx, lex, ly = sx - light_x, ex - light_x, y - light_y
    -- Per line flicker (TODO)
    local b = l_brightness --* (rnd(0.16) + 0.92)

    local brightest_level = 1
    local y_sqr = ly * ly
    local s_range, e_range = y_sqr + (lsx * lsx), y_sqr + (lex * lex)
    local lv_start, lv_end

    -- Find the start and end light levels for the start and end of the line
    for level = 5, 0, -1 do
      local r = (light_range[level] * b) & 0xffff
      if not lv_start and s_range >= r then
        lv_start = level + 1
        if (lv_end) break
      end
      if not lv_end and e_range >= r then
        lv_end = level + 1
        if (lv_start) break
      end
    end

    local low_level, high_level = 1, max(lv_start, lv_end)
    local m = max(sx - light_x, light_x - ex)
    for level = high_level - 1, 1, -1 do
    -- for level = 5, 1, -1 do
      local band_range = (light_range[level] * b) & 0xffff
      local x_sqr = band_range - y_sqr
      local brp = _sqrt[x_sqr]
      brkpts[level] = brp
      if not brp or brp < m then
        low_level = level + 1
        break
      end
    end

    -- for level = 5, 1, -1 do
    --   local l_range = light_range[level]
    --   local x_sqr = l_range - y_sqr
    --   if x_sqr > 0 then
    --     brkpts[level] = _sqrt[x_sqr]
    --   else
    --     brightest_level = level + 1
    --     break
    --   end
    -- end

    local x_fill_start = sx
    local x_fill_end
    local start_level, end_level = lv_start, lv_end
    for level = start_level, low_level + 1, -1 do
      x_fill_end = light_x - brkpts[level - 1]
      fills[level](x_fill_start, x_fill_end - 1, y)
      x_fill_start = x_fill_end
    end

    for level = low_level, end_level - 1 do
      x_fill_end = light_x + brkpts[level]
      fills[level](x_fill_start, x_fill_end - 1, y)
      x_fill_start = x_fill_end
    end

    fills[end_level](x_fill_start, ex, y)

  end
end

function gen_fill_color(color)
  return function(sx, ex, y)
    rectfill(sx, y, ex, y, color)
  end
end

function fill_none()
end

light_range = {
  10 * 42, 18 * 42,
  26 * 42, 34 * 42,
  42 * 42
}
light_range[0] = -1000

-- light_fills = {
--   gen_fill_color(7), --fill_none,        -- Max light level, do nothing
--   gen_fill_color(6), --gen_blend(2),     -- Light level 2
--   gen_fill_color(13),--gen_blend(3),     -- Light level 3
--   gen_fill_color(5), --gen_blend(4),     -- Light level 4
--   gen_fill_color(1), --gen_blend(5),     -- Light level 5
--   gen_fill_color(0) -- Light level 6, always black
-- }


light_fills = {
  fill_none,        -- Max light level, do nothing
  gen_blend(2),     -- Light level 2
  gen_blend(3),     -- Light level 3
  gen_blend(4),     -- Light level 4
  gen_blend(5),     -- Light level 5
  gen_fill_color(0) -- Light level 6, always black
}

function _init()
  init_lights(6)
end

pos_x = 42
pos_y = 42

function _update60()
  if (btn(0)) pos_x += -1
  if (btn(1)) pos_x += 1
  if (btn(2)) pos_y += -1
  if (btn(3)) pos_y += 1
end

function _draw()
  cls()

  palt()
  palt(0,false)

  local x_min, y_min, x_max, y_max = pos_x - 42, pos_y - 42, pos_x + 42, pos_y + 42
  clip(x_min, y_min, x_max - x_min + 1, y_max - y_min + 1)


  map(0, 0, 0, 0, 16, 16)

  local light_func = gen_fill_light(pos_x, pos_y, 1)
  local sx, ex = max(x_min, 0), min(x_max, 127)
  local sy, ey = max(y_min, 0), min(y_max, 127)

  for y = sy, ey do
    light_func(sx, ex, y)
  end

  show_performance()
end

function show_performance()
  clip()
  local cpu=flr(stat(1)*100)
  -- local fps=-60/flr(-stat(1))
  local fps = stat(7)
  local perf=
   cpu .. "% cpu @ " ..
   fps ..  " fps"
  print(perf,0,122,0)
  print(perf,0,121,fps==60 and 7 or 8)
 end



__gfx__
000000000000000000000000000000007b3007b3000007b300000000044444000000000000000000000000000000000000000000000000000000000000000000
11100000110000000000000000000000b3330b337b0b33310000000004fff4440000000000000000000000000000000000000000000000000000000000000000
22110000211000000000000000000000b3330b33b33000000000000044f2fff40000000000776000000000000000000000000000000000000000000000000000
3331100033110000000000000000000033130333b3307bb3000000004fff2ff40000000007666600000000000000000000000000000000000000000000000000
42211000442210000000000000000000031000010310b3330000000044fffff400000000666666d0000000000000000000000000000000000000000000000000
551110005511000000000000000000000007b33070000b330000000042444f420000000066666dd5000000000000000000000000000000000000000000000000
66d5100066dd510000000000000000007b0b3330b333003100000000424244420000000006d55555000000000000000000000000000000000000000000000000
776d100077776d510000000000000000b31003100331101100000000424242420000000000000000000000000000000000000000000000000000000000000000
882210008884210000000000000000000007b07b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9422100099942100000000000000000000b330b30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a9421000aa99421000000000000000000b3331330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bb331000bbb331000000000000000000700311310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccd51000ccdd51000000000000000000bb007b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
dd511000dd5110000000000000000000b300b3330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ee421000ee44421000000000000000003331b3110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
f9421000fff942100000000000000000031100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000666666660000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000677777750000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000d77777750000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000d77777750000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000d77777750000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000d77777750000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000d77777750000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000555555550000000000000000000000000000000000000000
__map__
0404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0405040404140404140714041404140400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0404050404040505040404050404140400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0404040407040405140504040504140400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
04041404050405140404042a2a2a2a2a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0404140405040404040404030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0414040505040514041404030303090303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0404050404140704041404030303030303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0414050504040414040404030309030303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0414040505050404040414030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0414040504141405050405040404050400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0404140404050404040504040404040500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0414140404050404050404041414040500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0414040404040404050414040505040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0414040504051404050505040514050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0405140504051404040405040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
